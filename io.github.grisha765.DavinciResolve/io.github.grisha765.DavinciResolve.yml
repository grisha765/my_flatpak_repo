id: io.github.grisha765.DavinciResolve
runtime: org.freedesktop.Platform
runtime-version: '22.08'
sdk: org.freedesktop.Sdk
command: resolve.sh
finish-args:
  - --share=ipc
  - --share=network
  - --socket=pulseaudio
  - --socket=x11
  - --socket=wayland
  - --device=dri
  - --filesystem=xdg-documents
  - --filesystem=xdg-cache
  - --filesystem=xdg-data
  - --filesystem=xdg-videos
  - --filesystem=~/.local/share/DaVinciResolve

modules:
  - ../shared-modules/glu/glu-9.json
  - name: resolve
    buildsystem: simple
    build-options:
      build-args:
        - --share=network
    build-commands:
      - ls -la
      - install -Dm755 resolve.sh /app/bin/resolve.sh
      - install -Dm755 io.github.grisha765.DavinciResolve.desktop /app/share/applications/io.github.grisha765.DavinciResolve.desktop
      - install -Dm644 io.github.grisha765.DavinciResolve.png /app/share/icons/hicolor/scalable/apps/io.github.grisha765.DavinciResolve.png
      - ./download.sh
      - cat ./setup.sh
      - ./setup.sh
    sources:
      - type: script
        dest-filename: resolve.sh
        commands:
          - export BMD_RESOLVE_CONFIG_DIR="${XDG_CONFIG_HOME}"
          - export BMD_RESOLVE_LICENSE_DIR="${XDG_DATA_HOME}/license"
          - export BMD_RESOLVE_LOGS_DIR="${XDG_DATA_HOME}/logs"
          - exec /app/bin/resolve $@
      - type: script
        dest-filename: download.sh
        commands:
          - COOKIES="_ga=GA1.2.1849503966.1518103294; _gid=GA1.2.953840595.1518103294"
          - REFER_ID="77ef91f67a9e411bbbe299e595b4cfcc"
          - |
            HEADERS="Host: www.blackmagicdesign.com
            Accept: application/json, text/plain, */*
            Origin: https://www.blackmagicdesign.com
            User-Agent: Mozilla/5.0 (X11; Linux) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36
            Content-Type: application/json;charset=UTF-8
            Accept-Encoding: gzip, deflate, br
            Accept-Language: en-US,en;q=0.9
            Authority: www.blackmagicdesign.com
            Cookie: $COOKIES"
          - |
            get_latest_version_information() {
                APP_TAG=$1
                RESPONSE=$(curl -s -H "$HEADERS" \
                    "https://www.blackmagicdesign.com/api/support/latest-stable-version/${APP_TAG}/linux")
                
                LATEST_VERSION=$(echo "$RESPONSE" | jq -r '.linux.major, .linux.minor, .linux.releaseNum, .linux.build')
                DOWNLOAD_ID=$(echo "$RESPONSE" | jq -r '.linux.downloadId')

                echo "$DOWNLOAD_ID"
            }
          - |
            download_using_id() {
                DOWNLOAD_ID=$1

                DOWNLOAD_URL_DATA=$(cat <<EOF
            {
                "firstname": "Flatpak",
                "lastname": "Builder",
                "email": "someone@flathub.org",
                "phone": "202-555-0194",
                "country": "us",
                "state": "New York",
                "city": "FPK",
                "street": "Bowery 146",
                "product": "DaVinci Resolve"
            }
            EOF
                )

                DOWNLOAD_URL=$(curl -s -H "$HEADERS" -d "$DOWNLOAD_URL_DATA" \
                    "https://www.blackmagicdesign.com/api/register/us/download/${DOWNLOAD_ID}")

                echo "Download DaVinci Resolve..."
                curl -L --progress-bar -o resolve.zip "$DOWNLOAD_URL"

                echo "Extract file..."
                unzip resolve.zip -d .
            }
          - APP_TAG="davinci-resolve"
          - DOWNLOAD_ID=$(get_latest_version_information "$APP_TAG")
          - download_using_id "$DOWNLOAD_ID"
          - echo "Done!"
      - type: script
        dest-filename: setup.sh
        commands:
          - PREFIX='/app'
          - STUDIO='false'
          - APP_ID="io.github.grisha765.DavinciResolve"
          - APP_DESCRIPTION="DaVinci Resolve"
          - |
            if ${STUDIO}; then
              APP_ID="io.github.grisha765.DavinciResolveStudio"
              APP_DESCRIPTION="DaVinci Resolve Studio"
            fi
          - ./DaVinci_Resolve_*_Linux.run --appimage-extract 2>&1
          - find squashfs-root -type f -exec chmod a+r,u+w {} \;
          - find squashfs-root -type d -exec chmod a+rx,u+w {} \;
          - mkdir -p ${PREFIX}/easyDCP ${PREFIX}/scripts ${PREFIX}/share ${PREFIX}/Fairlight ${PREFIX}/share/applications ${PREFIX}/share/icons/hicolor/128x128/apps ${PREFIX}/share/icons/hicolor/256x256/apps
          - chmod 755 ${PREFIX}/easyDCP ${PREFIX}/scripts ${PREFIX}/share ${PREFIX}/Fairlight ${PREFIX}/share/applications ${PREFIX}/share/icons/hicolor/128x128/apps ${PREFIX}/share/icons/hicolor/256x256/apps
          - cp -rp squashfs-root/bin ${PREFIX}/
          - cp -rp squashfs-root/Control ${PREFIX}/
          - cp -rp squashfs-root/Certificates ${PREFIX}/
          - cp -rp squashfs-root/DaVinci\ Control\ Panels\ Setup ${PREFIX}/
          - cp -rp squashfs-root/Developer ${PREFIX}/
          - cp -rp squashfs-root/docs ${PREFIX}/
          - cp -rp squashfs-root/Fairlight\ Studio\ Utility ${PREFIX}/
          - cp -rp squashfs-root/Fusion ${PREFIX}/
          - cp -rp squashfs-root/graphics ${PREFIX}/
          - cp -rp squashfs-root/libs ${PREFIX}/
          - cp -rp squashfs-root/LUT ${PREFIX}/
          - cp -rp squashfs-root/Onboarding ${PREFIX}/
          - cp -rp squashfs-root/plugins ${PREFIX}/
          - cp -rp squashfs-root/Technical\ Documentation ${PREFIX}/
          - cp -rp squashfs-root/UI_Resource ${PREFIX}/
          - cp -rp squashfs-root/scripts/script.checkfirmware ${PREFIX}/scripts/
          - cp -rp squashfs-root/scripts/script.getlogs.v4 ${PREFIX}/scripts/
          - cp -rp squashfs-root/scripts/script.start ${PREFIX}/scripts/
          - cp -rp squashfs-root/share/default-config.dat ${PREFIX}/share/
          - cp -rp squashfs-root/share/default_cm_config.bin ${PREFIX}/share/
          - cp -rp squashfs-root/share/log-conf.xml ${PREFIX}/share/
          - |
            if [[ -e squashfs-root/share/remote-monitoring-log-conf.xml ]]; then
                cp -rp squashfs-root/share/remote-monitoring-log-conf.xml ${PREFIX}/share/
            fi
          - tar -xzvf squashfs-root/share/panels/dvpanel-framework-linux-x86_64.tgz -C ${PREFIX}/libs libDaVinciPanelAPI.so libFairlightPanelAPI.so
          - mkdir -p ${PREFIX}/bin/BlackmagicRawAPI/
          - ln -s ../libs/libBlackmagicRawAPI.so ${PREFIX}/bin/libBlackmagicRawAPI.so
          - ln -s ../../libs/libBlackmagicRawAPI.so ${PREFIX}/bin/BlackmagicRawAPI/libBlackmagicRawAPI.so
          - |
            if [[ -e squashfs-root/BlackmagicRAWPlayer ]]; then
                echo "Adding BlackmagicRAWPlayer"

                cp -rp squashfs-root/BlackmagicRAWPlayer ${PREFIX}
                cat <<'    EOF'| sed -r 's/^\s+//' > ${PREFIX}/share/applications/${APP_ID}.RAWPlayer.desktop
                [Desktop Entry]
                Version=1.0
                Encoding=UTF-8
                Type=Application
                Name=Blackmagic RAW Player
                Exec=/app/BlackmagicRAWPlayer/BlackmagicRAWPlayer
                Icon=${APP_ID}.RAWPlayer
                Terminal=false
                MimeType=application/x-braw-clip;application/x-braw-sidecar
                StartupNotify=true
                Categories=AudioVideo
                EOF
                cp -p squashfs-root/graphics/blackmagicraw-player_256x256_apps.png ${PREFIX}/share/icons/hicolor/256x256/apps/${APP_ID}.RAWPlayer.png
            fi
          - |
            if [[ -e squashfs-root/BlackmagicRAWSpeedTest ]]; then
                echo "Adding BlackmagicRAWSpeedTest"

                cp -rp squashfs-root/BlackmagicRAWSpeedTest ${PREFIX}
                cat <<'    EOF'| sed -r 's/^\s+//' > ${PREFIX}/share/applications/${APP_ID}.RAWSpeedTest.desktop
                [Desktop Entry]
                Version=1.0
                Encoding=UTF-8
                Type=Application
                Name=Blackmagic RAW Speed Test
                Exec=/app/BlackmagicRAWSpeedTest/BlackmagicRAWSpeedTest
                Icon=${APP_ID}.RAWSpeedTest
                Terminal=false
                StartupNotify=true
                Categories=AudioVideo
                EOF
                cp -p squashfs-root/graphics/blackmagicraw-speedtest_256x256_apps.png ${PREFIX}/share/icons/hicolor/256x256/apps/${APP_ID}.RAWSpeedTest.png
            fi
          - |
            cat <<EOF > ${PREFIX}/share/applications/${APP_ID}.desktop
            [Desktop Entry]
            Version=1.0
            Type=Application
            Name=${APP_DESCRIPTION}
            Name[en_US]=${APP_DESCRIPTION}
            GenericName=${APP_DESCRIPTION}
            Comment=Revolutionary new tools for editing, visual effects, color correction and professional audio post production, all in a single application!
            Exec=/app/bin/resolve.sh %U
            Icon=${APP_ID}
            Terminal=false
            MimeType=application/x-resolveproj;
            StartupNotify=true
            Categories=AudioVideo
            EOF
          - cp -rp squashfs-root/graphics/DV_Resolve.png ${PREFIX}/share/icons/hicolor/128x128/apps/${APP_ID}.png
          - |
            if [[ -e "${PREFIX}/DaVinci Control Panels Setup/DaVinci Control Panels Setup" ]]; then
                cat <<'    EOF'| sed -r 's/^\s+//' > ${PREFIX}/share/applications/${APP_ID}.PanelSetup.desktop
                [Desktop Entry]
                Version=1.0
                Encoding=UTF-8
                Type=Application
                Name=DaVinci Resolve Panels Setup
                Exec="/app/DaVinci Resolve Panels Setup/DaVinci Resolve Panels Setup"
                Icon=${APP_ID}.PanelSetup.png
                Terminal=false
                StartupNotify=true
                Categories=AudioVideo
                EOF
                cp -rp squashfs-root/graphics/DV_Panels.png ${PREFIX}/share/icons/hicolor/128x128/apps/${APP_ID}.PanelSetup.png
            fi
          - |
            if [[ -e "${PREFIX}/bin/DaVinci Remote Monitoring" ]]; then
                cat <<'    EOF'| sed -r 's/^\s+//' > ${PREFIX}/share/applications/${APP_ID}.RemoteMonitoring.desktop
                [Desktop Entry]
                Version=1.0
                Encoding=UTF-8
                Type=Application
                Name=DaVinci Remote Monitoring
                Exec="/app/bin/DaVinci Remote Monitoring"
                Icon=${APP_ID}.RemoteMonitoring
                Terminal=false
                StartupNotify=true
                Categories=AudioVideo
                EOF
                cp -rp squashfs-root/graphics/Remote_Monitoring.png ${PREFIX}/share/icons/hicolor/128x128/apps/${APP_ID}.RemoteMonitoring.png
            fi

      - type: file
        path: io.github.grisha765.DavinciResolve.desktop
      - type: file
        path: io.github.grisha765.DavinciResolve.png

