on:
  push:
    branches: [main]
    paths:
      - '**/*.yml'
  pull_request:
    paths:
      - '**/*.yml'
  workflow_dispatch:

name: CI

env:
    PAGES_REPO_URL: ${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
    NGINX_REPO_URL: 192.168.88.88:8086/
    FLATPAK_HISTORY_LEN: 0
    FLATPAK_DELTAS: true

    FLATPAK_BUILD: build-dir
    PAGES_REPO: repo-dir
    NGINX_REPO: /usr/share/nginx/html

jobs:
  build_jobs:
    runs-on: ubuntu-latest
    outputs:
      full_names: ${{ steps.find_manifests.outputs.full_names }}
      short_names: ${{ steps.find_manifests.outputs.short_names }}
      names_map: ${{ steps.find_manifests.outputs.names_map }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Find Flatpak manifests
        id: find_manifests
        run: |
          rm -rf io.github.tdesktop_x64.TDesktop
          full_names=$(find . -type f -name '*.yml' -not -path './.github/*' | xargs -n 1 basename | sed 's/\.yml$//' | jq -R -s -c 'split("\n")[:-1]')
          short_names=$(echo "$full_names" | jq -r '.[] | split(".") | last' | jq -R -s -c 'split("\n")[:-1]')
          names_map=$(jq -n \
            --argjson full_names "$full_names" \
            --argjson short_names "$short_names" \
            '[range(0; $full_names | length) as $i | { "full_name": $full_names[$i], "short_name": $short_names[$i] }]' | jq -c .)
          echo "full_names=$full_names" >> $GITHUB_OUTPUT
          echo "short_names=$short_names" >> $GITHUB_OUTPUT
          echo "names_map=$names_map" >> $GITHUB_OUTPUT

  build_manifest:
    needs: build_jobs
    strategy:
      matrix:
        include: ${{ fromJson(needs.build_jobs.outputs.names_map) }}
    name: Build ${{ matrix.short_name }}
    runs-on: ubuntu-latest
    container:
      image: docker.io/bilelmoussaoui/flatpak-github-actions:freedesktop-23.08
      options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 1

      - name: Import GPG-key
        id: gpg-key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Build Flatpak with flatpak-builder
        run: |
          set -e
          flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          flatpak-builder --install-deps-from=flathub --install-deps-only --user /dev/null "${{ matrix.full_name }}/${{ matrix.full_name }}.yml"
          flatpak-builder --delete-build-dirs --build-only --disable-updates --sandbox --gpg-sign=${{ steps.gpg-key.outputs.fingerprint }} ${{ env.FLATPAK_BUILD }} "${{ matrix.full_name }}/${{ matrix.full_name }}.yml"
          rm -rf ${{ env.FLATPAK_BUILD }}/var

      - name: Upload flatpak package
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.short_name }}
          path: ${{ env.FLATPAK_BUILD }}
          retention-days: 1

  build_export:
    needs: 
      - build_manifest
      - build_jobs
    strategy:
      matrix:
        include: ${{ fromJson(needs.build_jobs.outputs.names_map) }}
    name: Export ${{ matrix.short_name }}
    runs-on: larga-serv
    container:
      image: docker.io/bilelmoussaoui/flatpak-github-actions:freedesktop-23.08
      options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          clean: false
          fetch-depth: 1

      - name: Import GPG-key
        id: gpg-key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Download flatpak build artifact
        uses: actions/download-artifact@v3
        with:
          name: build-${{ matrix.short_name }}
          path: ${{ env.FLATPAK_BUILD }}-${{ matrix.short_name }}

      - name: Export flatpak build
        run: |
          set -e
          mkdir -p ${{ env.NGINX_REPO }}/repo
          flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          flatpak-builder --install-deps-from=flathub --install-deps-only --user /dev/null "${{ matrix.full_name }}/${{ matrix.full_name }}.yml"
          flatpak-builder --delete-build-dirs --finish-only --disable-updates --sandbox --gpg-sign=${{ steps.gpg-key.outputs.fingerprint }} ${{ env.FLATPAK_BUILD }}-${{ matrix.short_name }} "${{ matrix.full_name }}/${{ matrix.full_name }}.yml"
          flatpak build-export --gpg-sign=${{ steps.gpg-key.outputs.fingerprint }} ./repo ${{ env.FLATPAK_BUILD }}-${{ matrix.short_name }}

      - name: Delete flatpak build dir
        if: always()
        run: |
          set -e
          rm -rf ${{ env.FLATPAK_BUILD }}-${{ matrix.short_name }}

      - name: Delete flatpak build artifact
        if: always()
        uses: geekyeggo/delete-artifact@v5
        with:
          name: build-${{ matrix.short_name }}

  build_repo:
    needs: 
      - build_manifest
      - build_jobs
      - build_export
    runs-on: larga-serv
    container:
      image: docker.io/bilelmoussaoui/flatpak-github-actions:freedesktop-23.08
      options: --privileged
    steps:
      - name: Import GPG-key
        id: gpg-key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Prepare GPG-pubkey
        run: |
          set -e
          gpg --export ${{ steps.gpg-key.outputs.fingerprint }} > pubkey.gpg

      - name: Create Flatpak repository metadata
        run: |
          set -e
          mkdir -p ./repo/refs/remotes ./repo/refs/mirrors
          touch ./repo/refs/remotes/.gitkeep ./repo/refs/mirrors/.gitkeep
          flatpak build-update-repo --no-update-summary --prune --prune-depth=${{ env.FLATPAK_HISTORY_LEN }} ./repo
          flatpak build-update-repo --gpg-sign=${{ steps.gpg-key.outputs.fingerprint }} --gpg-import=pubkey.gpg --generate-static-deltas ./repo

  export_repo:
    runs-on: larga-serv
    needs: 
      - build_manifest
      - build_jobs
      - build_export
      - build_repo
    steps:
      - name: Moving repo
        run: |
          mv ./repo ${{ env.NGINX_REPO }}/repo

      - name: Write .flatpakrepo file
        run: |
          set -e
          cat > ${{ env.NGINX_REPO }}/${{ github.repository_owner }}.flatpakrepo << EOF 
          [Flatpak Repo]
          Title=${{ env.NGINX_REPO_URL }}
          Url=http://${{ env.NGINX_REPO_URL }}repo/
          GPGKey=$(cat pubkey.gpg | base64 --wrap=0)"
          EOF
